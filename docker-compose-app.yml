version: "3"

services:
  # Frontend
  demo:
    container_name: demo
    build: ./demo
    depends_on:
      - userdb
    ports:
      - "8080:8080"
    volumes:
      - ./demo:/srv
    tty: true
    working_dir: /srv
    environment:
      spring.datasource.driverClassName: "com.mysql.cj.jdbc.Driver"
      spring.datasource.url: "jdbc:mysql://userdb:3306/user"
      spring.datasource.username: "mysql"
      spring.datasource.password: "mysql"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_SERVICE_NAME: demo
      OTEL_METRIC_EXPORT_INTERVAL: 6000

  # Backend API
  user:
    container_name: user
    build: ./user
    depends_on:
      - userdb
    ports:
      - "8081:8081"
    volumes:
      - ./user:/srv
    tty: true
    working_dir: /srv
    environment:
      spring.datasource.driverClassName: "com.mysql.cj.jdbc.Driver"
      spring.datasource.url: "jdbc:mysql://userdb:3306/user"
      spring.datasource.username: "mysql"
      spring.datasource.password: "mysql"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_SERVICE_NAME: user
      OTEL_METRIC_EXPORT_INTERVAL: 6000

  item:
    container_name: item
    build: ./item
    depends_on:
      - itemdb
    ports:
      - "8082:8082"
    volumes:
      - ./item:/srv
    tty: true
    working_dir: /srv
    environment:
      spring.datasource.driverClassName: "com.mysql.cj.jdbc.Driver"
      spring.datasource.url: "jdbc:mysql://itemdb:3306/item"
      spring.datasource.username: "mysql"
      spring.datasource.password: "mysql"
      OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
      OTEL_SERVICE_NAME: item
      OTEL_METRIC_EXPORT_INTERVAL: 6000

  # MySQL
  userdb:
    container_name: userdb
    build: ./userdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: user
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./userdb/initdb/:/docker-entrypoint-initdb.d/
      - ./userdb/config:/etc/mysql/conf.d
    ports:
      - 3306:3306

  itemdb:
    container_name: itemdb
    build: ./itemdb
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: item
      MYSQL_USER: mysql
      MYSQL_PASSWORD: mysql
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    volumes:
      - ./itemdb/initdb/:/docker-entrypoint-initdb.d/
      - ./itemdb/config:/etc/mysql/conf.d
    ports:
      - 3307:3306

  # Collector
  otel-collector:
    container_name: otel-collector
    image: otel/opentelemetry-collector-contrib:latest
    command: ["--config=/etc/otel-collector-config.yaml", ""]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888" # pprof extension
      - "8888:8888" # Prometheus metrics exposed by the collector
      - "8889:8889" # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317" # OTLP gRPC receiver
      # - '55681:55679' # zpages extension
